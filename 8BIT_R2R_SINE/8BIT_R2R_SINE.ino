byte hiResValues[] = {127, 130, 133, 136, 139, 142, 145, 148, 151, 154, 157, 160, 163, 166, 169, 172, 175, 177, 180, 183, 186, 188, 
191, 194, 196, 199, 201, 204, 206, 208, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231, 232, 234, 236, 237, 238, 240, 241, 242, 
243, 244, 245, 246, 247, 248, 249, 249, 250, 250, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 250, 250, 250, 249, 248, 248, 247, 
246, 245, 244, 243, 242, 240, 239, 238, 236, 235, 233, 232, 230, 228, 226, 224, 222, 220, 218, 216, 214, 212, 210, 207, 205, 202, 200, 
197, 195, 192, 190, 187, 184, 182, 179, 176, 173, 170, 167, 164, 161, 158, 155, 152, 149, 146, 143, 140, 137, 134, 131, 128, 125, 122, 
119, 116, 113, 110, 107, 104, 101, 98, 95, 92, 89, 86, 83, 80, 77, 74, 71, 69, 66, 63, 61, 58, 56, 53, 51, 48, 46, 43, 41, 39, 37, 35, 
33, 31, 29, 27, 25, 23, 21, 20, 18, 17, 15, 14, 13, 11, 10, 9, 8, 7, 6, 5, 5, 4, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 4, 4, 5, 
6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 21, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 45, 47, 49, 52, 54, 57, 59, 62, 65, 67, 70, 
73, 76, 78, 81, 84, 87, 90, 93, 96, 99, 102, 105, 108, 111, 114, 117, 120, 123, 127};

void setup() {
  DDRD = B11111111;
  delay(3000);
}

void loop() {
  for (int i = 0; i<= 255; i++){ 
    PORTD = hiResValues[i];
    delayMicroseconds(10);
  }

}

// code below generates values on the go --> slow
/*byte value = 0;
int x = 0;

void setup() {
  DDRD = B11111111;
  delay(10000);
}

void loop() { 
  value = 127 + (125 * sin((2* PI * x)/512));
  PORTD = value;
  if (x == 512) {
    x = 0;  
  }
  else {
    x++;  
  }
}*/
